---
import { Icon } from "astro-icon/components";
interface Props {
  id: number;
  title: string;
  image: string;
  alt: string;
  date: Date;
  author: string;
  avatar: string;
  description: string;
}

const { id, title, image, alt, date, author, description, avatar } =
  Astro.props;
const dates = new Date(date);
const dt = dates.toLocaleDateString("en-GB");
---

<section class="p-4">
  <div
    class="border-1 h-full overflow-hidden rounded-lg border-gray-200 bg-white p-2 shadow-xl dark:border-gray-700 dark:bg-gray-800"
  >
    <a href=`/blog/${title}`>
      <img
        src={image}
        alt={alt}
        class="relative h-64 w-full overflow-hidden rounded-lg bg-purple-100 object-cover object-center group-hover:opacity-75 dark:bg-purple-800"
      />
      <p class="sr-only">{title}</p>
    </a>
    <div class="p-6">
      <a href={`/blog/${title}`}>
        <h1
          class="title-font mt-2 text-xl font-bold text-primary hover:text-accent"
        >
          {title}
        </h1>
      </a>
      <div class="flex flex-wrap items-center">
        <span
          class="mr-3 inline-flex items-center border-r-2 py-1 pr-3 text-xs leading-none text-gray-500"
        >
          <Icon class="mr-1 h-4 w-4" name="heroicons-outline:calendar" />
          {dt}
        </span>
        {
          author && (
            <span class="font-medium inline-flex items-center text-xs leading-none">
              <div class="avatar">
                <div class="w-8 mr-2 rounded-full">
                  <img src={avatar} />
                </div>
              </div>
              {author}
            </span>
          )
        }
      </div>
      <p class="mt-3 text-sm italic text-gray-600">
        {description}
      </p>
      <div class="flex justify-end">
        <button
          id={id.toString()}
          class="delete-blog mt-3 btn btn-active btn-primary text-white"
          >Eliminar</button
        >
      </div>
    </div>
  </div>
</section>
<script>
  const deleteButtons = document.querySelectorAll("button.delete-blog");
  const deletePost = async (id: number): Promise<void> => {
    try {
      const response = await fetch(
        `${import.meta.env.PUBLIC_DB}blogpost/${id}`,
        {
          method: "DELETE",
        }
      );
      if (response.ok) {
        console.log("Post eliminado exitosamente");
        location.reload();
      } else {
        console.log("Error al eliminar el post");
      }
    } catch (error) {
      console.error(error);
    }
  };

  deleteButtons.forEach((button) => {
    button.addEventListener("click", (event) => {
      const id = parseInt((event.target as HTMLButtonElement).id);
      deletePost(id);
    });
  });
</script>
